ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM3.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM3_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM3_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM3_Enable, %function
  25              	PWM3_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM3.c"
   1:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM3.c **** * File Name: PWM3.c
   3:Generated_Source\PSoC5/PWM3.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM3.c **** *
   5:Generated_Source\PSoC5/PWM3.c **** * Description:
   6:Generated_Source\PSoC5/PWM3.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM3.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM3.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM3.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM3.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM3.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM3.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM3.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM3.c **** *
  15:Generated_Source\PSoC5/PWM3.c **** * Note:
  16:Generated_Source\PSoC5/PWM3.c **** *
  17:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM3.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM3.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM3.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM3.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM3.c **** 
  24:Generated_Source\PSoC5/PWM3.c **** #include "PWM3.h"
  25:Generated_Source\PSoC5/PWM3.c **** 
  26:Generated_Source\PSoC5/PWM3.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM3.c **** #ifdef PWM3_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM3.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM3.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM3.c **** #endif /* PWM3_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 2


  31:Generated_Source\PSoC5/PWM3.c **** 
  32:Generated_Source\PSoC5/PWM3.c **** uint8 PWM3_initVar = 0u;
  33:Generated_Source\PSoC5/PWM3.c **** 
  34:Generated_Source\PSoC5/PWM3.c **** 
  35:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_Start
  37:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM3.c **** *
  39:Generated_Source\PSoC5/PWM3.c **** * Summary:
  40:Generated_Source\PSoC5/PWM3.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM3.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM3.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM3.c **** *
  44:Generated_Source\PSoC5/PWM3.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM3.c **** *  None
  46:Generated_Source\PSoC5/PWM3.c **** *
  47:Generated_Source\PSoC5/PWM3.c **** * Return:
  48:Generated_Source\PSoC5/PWM3.c **** *  None
  49:Generated_Source\PSoC5/PWM3.c **** *
  50:Generated_Source\PSoC5/PWM3.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM3.c **** *  PWM3_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM3.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM3.c **** *
  54:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM3.c **** void PWM3_Start(void) 
  56:Generated_Source\PSoC5/PWM3.c **** {
  57:Generated_Source\PSoC5/PWM3.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM3.c ****     if(PWM3_initVar == 0u)
  59:Generated_Source\PSoC5/PWM3.c ****     {
  60:Generated_Source\PSoC5/PWM3.c ****         PWM3_Init();
  61:Generated_Source\PSoC5/PWM3.c ****         PWM3_initVar = 1u;
  62:Generated_Source\PSoC5/PWM3.c ****     }
  63:Generated_Source\PSoC5/PWM3.c ****     PWM3_Enable();
  64:Generated_Source\PSoC5/PWM3.c **** 
  65:Generated_Source\PSoC5/PWM3.c **** }
  66:Generated_Source\PSoC5/PWM3.c **** 
  67:Generated_Source\PSoC5/PWM3.c **** 
  68:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_Init
  70:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM3.c **** *
  72:Generated_Source\PSoC5/PWM3.c **** * Summary:
  73:Generated_Source\PSoC5/PWM3.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM3.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM3.c **** *  PWM3_Start().
  76:Generated_Source\PSoC5/PWM3.c **** *
  77:Generated_Source\PSoC5/PWM3.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM3.c **** *  None
  79:Generated_Source\PSoC5/PWM3.c **** *
  80:Generated_Source\PSoC5/PWM3.c **** * Return:
  81:Generated_Source\PSoC5/PWM3.c **** *  None
  82:Generated_Source\PSoC5/PWM3.c **** *
  83:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM3.c **** void PWM3_Init(void) 
  85:Generated_Source\PSoC5/PWM3.c **** {
  86:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction || PWM3_UseControl)
  87:Generated_Source\PSoC5/PWM3.c ****         uint8 ctrl;
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 3


  88:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction || PWM3_UseControl) */
  89:Generated_Source\PSoC5/PWM3.c **** 
  90:Generated_Source\PSoC5/PWM3.c ****     #if(!PWM3_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UseStatus)
  92:Generated_Source\PSoC5/PWM3.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM3.c ****             uint8 PWM3_interruptState;
  94:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UseStatus) */
  95:Generated_Source\PSoC5/PWM3.c ****     #endif /* (!PWM3_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM3.c **** 
  97:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM3.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL |= PWM3_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM3.c ****             PWM3_CONTROL |= PWM3_CFG0_DB;
 102:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM3.c **** 
 104:Generated_Source\PSoC5/PWM3.c ****         ctrl = PWM3_CONTROL3 & ((uint8 )(~PWM3_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL3 = ctrl | PWM3_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM3.c **** 
 107:Generated_Source\PSoC5/PWM3.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM3.c ****         PWM3_RT1 &= ((uint8)(~PWM3_RT1_MASK));
 109:Generated_Source\PSoC5/PWM3.c ****         PWM3_RT1 |= PWM3_SYNC;
 110:Generated_Source\PSoC5/PWM3.c **** 
 111:Generated_Source\PSoC5/PWM3.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM3.c ****         PWM3_RT1 &= ((uint8)(~PWM3_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM3.c ****         PWM3_RT1 |= PWM3_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM3.c **** 
 115:Generated_Source\PSoC5/PWM3.c ****     #elif (PWM3_UseControl)
 116:Generated_Source\PSoC5/PWM3.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM3.c ****         ctrl = PWM3_CONTROL & ((uint8)(~PWM3_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM3.c ****                 ((uint8)(~PWM3_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL = ctrl | PWM3_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM3.c ****                                    PWM3_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM3.c **** 
 123:Generated_Source\PSoC5/PWM3.c ****     #if (!PWM3_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_Resolution == 8)
 125:Generated_Source\PSoC5/PWM3.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM3.c ****             PWM3_AUX_CONTROLDP0 |= (PWM3_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM3.c ****         #else /* (PWM3_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM3.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM3.c ****             PWM3_AUX_CONTROLDP0 |= (PWM3_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM3.c ****             PWM3_AUX_CONTROLDP1 |= (PWM3_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM3.c **** 
 133:Generated_Source\PSoC5/PWM3.c ****         PWM3_WriteCounter(PWM3_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM3.c ****     #endif /* (!PWM3_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM3.c **** 
 136:Generated_Source\PSoC5/PWM3.c ****     PWM3_WritePeriod(PWM3_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM3.c **** 
 138:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteCompare(PWM3_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM3.c ****         #else
 141:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteCompare1(PWM3_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteCompare2(PWM3_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM3.c **** 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 4


 145:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteKillTime(PWM3_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM3.c **** 
 149:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteDeadTime(PWM3_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM3.c **** 
 153:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UseStatus || PWM3_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM3.c ****         PWM3_SetInterruptMode(PWM3_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UseStatus || PWM3_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM3.c **** 
 157:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM3.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM3.c ****         PWM3_GLOBAL_ENABLE |= PWM3_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM3.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL2 |= PWM3_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM3.c ****     #else
 163:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UseStatus)
 164:Generated_Source\PSoC5/PWM3.c **** 
 165:Generated_Source\PSoC5/PWM3.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM3.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM3.c ****             PWM3_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM3.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM3.c ****             PWM3_STATUS_AUX_CTRL |= PWM3_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM3.c **** 
 171:Generated_Source\PSoC5/PWM3.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM3.c ****             CyExitCriticalSection(PWM3_interruptState);
 173:Generated_Source\PSoC5/PWM3.c **** 
 174:Generated_Source\PSoC5/PWM3.c ****             /* Clear the FIFO to enable the PWM3_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM3.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM3.c ****             PWM3_ClearFIFO();
 177:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UseStatus) */
 178:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM3.c **** }
 180:Generated_Source\PSoC5/PWM3.c **** 
 181:Generated_Source\PSoC5/PWM3.c **** 
 182:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_Enable
 184:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM3.c **** *
 186:Generated_Source\PSoC5/PWM3.c **** * Summary:
 187:Generated_Source\PSoC5/PWM3.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM3.c **** *
 189:Generated_Source\PSoC5/PWM3.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM3.c **** *  None
 191:Generated_Source\PSoC5/PWM3.c **** *
 192:Generated_Source\PSoC5/PWM3.c **** * Return:
 193:Generated_Source\PSoC5/PWM3.c **** *  None
 194:Generated_Source\PSoC5/PWM3.c **** *
 195:Generated_Source\PSoC5/PWM3.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM3.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM3.c **** *
 198:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM3.c **** void PWM3_Enable(void) 
 200:Generated_Source\PSoC5/PWM3.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM3.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM3.c ****         PWM3_GLOBAL_ENABLE |= PWM3_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM3.c ****         PWM3_GLOBAL_STBY_ENABLE |= PWM3_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM3.c **** 
 207:Generated_Source\PSoC5/PWM3.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UseControl || PWM3_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL |= PWM3_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 74650040 		.word	1073767796
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM3_Enable, .-PWM3_Enable
  46              		.section	.text.PWM3_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM3_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM3_Stop, %function
  52              	PWM3_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UseControl || PWM3_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM3.c **** }
 212:Generated_Source\PSoC5/PWM3.c **** 
 213:Generated_Source\PSoC5/PWM3.c **** 
 214:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_Stop
 216:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM3.c **** *
 218:Generated_Source\PSoC5/PWM3.c **** * Summary:
 219:Generated_Source\PSoC5/PWM3.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM3.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM3.c **** *
 222:Generated_Source\PSoC5/PWM3.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM3.c **** *  None
 224:Generated_Source\PSoC5/PWM3.c **** *
 225:Generated_Source\PSoC5/PWM3.c **** * Return:
 226:Generated_Source\PSoC5/PWM3.c **** *  None
 227:Generated_Source\PSoC5/PWM3.c **** *
 228:Generated_Source\PSoC5/PWM3.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM3.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM3.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM3.c **** *
 232:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 6


 233:Generated_Source\PSoC5/PWM3.c **** void PWM3_Stop(void) 
 234:Generated_Source\PSoC5/PWM3.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UseControl || PWM3_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM3.c ****         PWM3_CONTROL &= ((uint8)(~PWM3_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 74650040 		.word	1073767796
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM3_Stop, .-PWM3_Stop
  72              		.section	.text.PWM3_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM3_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM3_WriteCounter, %function
  78              	PWM3_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UseControl || PWM3_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM3.c **** 
 239:Generated_Source\PSoC5/PWM3.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM3.c ****         PWM3_GLOBAL_ENABLE &= ((uint8)(~PWM3_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM3.c ****         PWM3_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM3_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM3.c **** }
 245:Generated_Source\PSoC5/PWM3.c **** 
 246:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM3.c **** 
 249:Generated_Source\PSoC5/PWM3.c **** 
 250:Generated_Source\PSoC5/PWM3.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM3.c ****         * Function Name: PWM3_SetCompareMode
 252:Generated_Source\PSoC5/PWM3.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM3.c ****         *
 254:Generated_Source\PSoC5/PWM3.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM3.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM3.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM3.c ****         *
 258:Generated_Source\PSoC5/PWM3.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM3.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM3.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM3.c ****         *
 262:Generated_Source\PSoC5/PWM3.c ****         * Return:
 263:Generated_Source\PSoC5/PWM3.c ****         *  None
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 7


 264:Generated_Source\PSoC5/PWM3.c ****         *
 265:Generated_Source\PSoC5/PWM3.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM3.c ****         void PWM3_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM3.c ****         {
 268:Generated_Source\PSoC5/PWM3.c ****             #if(PWM3_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM3.c **** 
 270:Generated_Source\PSoC5/PWM3.c ****                 #if(0 != PWM3_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM3_CTRL_CMPMODE1_SHI
 272:Generated_Source\PSoC5/PWM3.c ****                 #else
 273:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM3.c ****                 #endif /* (0 != PWM3_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM3.c **** 
 276:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL3 &= ((uint8)(~PWM3_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM3.c **** 
 279:Generated_Source\PSoC5/PWM3.c ****             #elif (PWM3_UseControl)
 280:Generated_Source\PSoC5/PWM3.c **** 
 281:Generated_Source\PSoC5/PWM3.c ****                 #if(0 != PWM3_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM3_CTRL_CMPMODE1_SH
 283:Generated_Source\PSoC5/PWM3.c ****                                                 PWM3_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM3.c ****                 #else
 285:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemode1masked = comparemode & PWM3_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM3.c ****                 #endif /* (0 != PWM3_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM3.c **** 
 288:Generated_Source\PSoC5/PWM3.c ****                 #if(0 != PWM3_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM3_CTRL_CMPMODE2_SH
 290:Generated_Source\PSoC5/PWM3.c ****                                                PWM3_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM3.c ****                 #else
 292:Generated_Source\PSoC5/PWM3.c ****                     uint8 comparemode2masked = comparemode & PWM3_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM3.c ****                 #endif /* (0 != PWM3_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM3.c **** 
 295:Generated_Source\PSoC5/PWM3.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL &= ((uint8)(~(PWM3_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM3.c ****                                             PWM3_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM3.c **** 
 300:Generated_Source\PSoC5/PWM3.c ****             #else
 301:Generated_Source\PSoC5/PWM3.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM3.c ****             #endif /* (PWM3_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM3.c ****         }
 304:Generated_Source\PSoC5/PWM3.c ****     #endif /* PWM3_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM3.c **** 
 306:Generated_Source\PSoC5/PWM3.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM3.c **** 
 308:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM3.c **** 
 310:Generated_Source\PSoC5/PWM3.c **** 
 311:Generated_Source\PSoC5/PWM3.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM3.c ****         * Function Name: PWM3_SetCompareMode1
 313:Generated_Source\PSoC5/PWM3.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM3.c ****         *
 315:Generated_Source\PSoC5/PWM3.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM3.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM3.c ****         *
 318:Generated_Source\PSoC5/PWM3.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM3.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM3.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 8


 321:Generated_Source\PSoC5/PWM3.c ****         *
 322:Generated_Source\PSoC5/PWM3.c ****         * Return:
 323:Generated_Source\PSoC5/PWM3.c ****         *  None
 324:Generated_Source\PSoC5/PWM3.c ****         *
 325:Generated_Source\PSoC5/PWM3.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM3.c ****         void PWM3_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM3.c ****         {
 328:Generated_Source\PSoC5/PWM3.c ****             #if(0 != PWM3_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM3.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM3_CTRL_CMPMODE1_SHIFT))
 330:Generated_Source\PSoC5/PWM3.c ****                                            PWM3_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM3.c ****             #else
 332:Generated_Source\PSoC5/PWM3.c ****                 uint8 comparemodemasked = comparemode & PWM3_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM3.c ****             #endif /* (0 != PWM3_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM3.c **** 
 335:Generated_Source\PSoC5/PWM3.c ****             #if (PWM3_UseControl)
 336:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL &= ((uint8)(~PWM3_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM3.c ****                 PWM3_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM3.c ****             #endif /* (PWM3_UseControl) */
 339:Generated_Source\PSoC5/PWM3.c ****         }
 340:Generated_Source\PSoC5/PWM3.c ****     #endif /* PWM3_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM3.c **** 
 342:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM3.c **** 
 344:Generated_Source\PSoC5/PWM3.c **** 
 345:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_SetCompareMode2
 347:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM3.c ****     *
 349:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM3.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM3.c ****     *
 352:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM3.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM3.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM3.c ****     *
 356:Generated_Source\PSoC5/PWM3.c ****     * Return:
 357:Generated_Source\PSoC5/PWM3.c ****     *  None
 358:Generated_Source\PSoC5/PWM3.c ****     *
 359:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM3.c ****     void PWM3_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM3.c ****     {
 362:Generated_Source\PSoC5/PWM3.c **** 
 363:Generated_Source\PSoC5/PWM3.c ****         #if(0 != PWM3_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM3.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM3_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM3.c ****                                                  PWM3_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM3.c ****         #else
 367:Generated_Source\PSoC5/PWM3.c ****             uint8 comparemodemasked = comparemode & PWM3_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM3.c ****         #endif /* (0 != PWM3_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM3.c **** 
 370:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_UseControl)
 371:Generated_Source\PSoC5/PWM3.c ****             PWM3_CONTROL &= ((uint8)(~PWM3_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM3.c ****             PWM3_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UseControl) */
 374:Generated_Source\PSoC5/PWM3.c ****     }
 375:Generated_Source\PSoC5/PWM3.c ****     #endif /*PWM3_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM3.c **** 
 377:Generated_Source\PSoC5/PWM3.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 9


 378:Generated_Source\PSoC5/PWM3.c **** 
 379:Generated_Source\PSoC5/PWM3.c **** 
 380:Generated_Source\PSoC5/PWM3.c **** #if (!PWM3_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM3.c **** 
 382:Generated_Source\PSoC5/PWM3.c **** 
 383:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteCounter
 385:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM3.c ****     *
 387:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM3.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM3.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM3.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM3.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM3.c ****     *
 393:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM3.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM3.c ****     *
 396:Generated_Source\PSoC5/PWM3.c ****     * Return:
 397:Generated_Source\PSoC5/PWM3.c ****     *  None
 398:Generated_Source\PSoC5/PWM3.c ****     *
 399:Generated_Source\PSoC5/PWM3.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM3.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM3.c ****     *
 402:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM3.c ****                                        
 405:Generated_Source\PSoC5/PWM3.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM3.c ****         CY_SET_REG8(PWM3_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 04650040 		.word	1073767684
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM3_WriteCounter, .-PWM3_WriteCounter
  97              		.section	.text.PWM3_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM3_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM3_ReadCounter, %function
 103              	PWM3_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM3.c ****     }
 408:Generated_Source\PSoC5/PWM3.c **** 
 409:Generated_Source\PSoC5/PWM3.c **** 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 10


 410:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadCounter
 412:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM3.c ****     *
 414:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM3.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM3.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM3.c ****     *
 418:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM3.c ****     *  None
 420:Generated_Source\PSoC5/PWM3.c ****     *
 421:Generated_Source\PSoC5/PWM3.c ****     * Return:
 422:Generated_Source\PSoC5/PWM3.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM3.c ****     *
 424:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM3.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM3.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM3.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM3.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM3.c ****           (void)CY_GET_REG8(PWM3_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM3.c **** 
 432:Generated_Source\PSoC5/PWM3.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM3.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 14650040 		.word	1073767700
 122 0010 54650040 		.word	1073767764
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM3_ReadCounter, .-PWM3_ReadCounter
 126              		.section	.text.PWM3_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM3_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM3_WritePeriod, %function
 132              	PWM3_WritePeriod:
 133              	.LFB6:
 435:Generated_Source\PSoC5/PWM3.c **** 
 436:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UseStatus)
 437:Generated_Source\PSoC5/PWM3.c **** 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 11


 438:Generated_Source\PSoC5/PWM3.c **** 
 439:Generated_Source\PSoC5/PWM3.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM3.c ****         * Function Name: PWM3_ClearFIFO
 441:Generated_Source\PSoC5/PWM3.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM3.c ****         *
 443:Generated_Source\PSoC5/PWM3.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM3.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM3.c ****         *
 446:Generated_Source\PSoC5/PWM3.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM3.c ****         *  None
 448:Generated_Source\PSoC5/PWM3.c ****         *
 449:Generated_Source\PSoC5/PWM3.c ****         * Return:
 450:Generated_Source\PSoC5/PWM3.c ****         *  None
 451:Generated_Source\PSoC5/PWM3.c ****         *
 452:Generated_Source\PSoC5/PWM3.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM3.c ****         void PWM3_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM3.c ****         {
 455:Generated_Source\PSoC5/PWM3.c ****             while(0u != (PWM3_ReadStatusRegister() & PWM3_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM3.c ****             {
 457:Generated_Source\PSoC5/PWM3.c ****                 (void)PWM3_ReadCapture();
 458:Generated_Source\PSoC5/PWM3.c ****             }
 459:Generated_Source\PSoC5/PWM3.c ****         }
 460:Generated_Source\PSoC5/PWM3.c **** 
 461:Generated_Source\PSoC5/PWM3.c ****     #endif /* PWM3_UseStatus */
 462:Generated_Source\PSoC5/PWM3.c **** 
 463:Generated_Source\PSoC5/PWM3.c **** #endif /* !PWM3_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM3.c **** 
 465:Generated_Source\PSoC5/PWM3.c **** 
 466:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_WritePeriod
 468:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM3.c **** *
 470:Generated_Source\PSoC5/PWM3.c **** * Summary:
 471:Generated_Source\PSoC5/PWM3.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM3.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM3.c **** *
 474:Generated_Source\PSoC5/PWM3.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM3.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM3.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM3.c **** *
 478:Generated_Source\PSoC5/PWM3.c **** * Return:
 479:Generated_Source\PSoC5/PWM3.c **** *  None
 480:Generated_Source\PSoC5/PWM3.c **** *
 481:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM3.c **** void PWM3_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM3.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/PWM3.c ****     #if(PWM3_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM3.c ****         CY_SET_REG16(PWM3_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM3.c ****     #else
 487:Generated_Source\PSoC5/PWM3.c ****         CY_SET_REG8(PWM3_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 44650040 		.word	1073767748
 148              		.cfi_endproc
 149              	.LFE6:
 150              		.size	PWM3_WritePeriod, .-PWM3_WritePeriod
 151              		.section	.text.PWM3_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	PWM3_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM3_WriteCompare1, %function
 157              	PWM3_WriteCompare1:
 158              	.LFB7:
 488:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM3.c **** }
 490:Generated_Source\PSoC5/PWM3.c **** 
 491:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM3.c **** 
 493:Generated_Source\PSoC5/PWM3.c **** 
 494:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteCompare
 496:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM3.c ****     *
 498:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM3.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM3.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM3.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM3.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM3.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM3.c ****     *
 505:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM3.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM3.c ****     *
 508:Generated_Source\PSoC5/PWM3.c ****     * Return:
 509:Generated_Source\PSoC5/PWM3.c ****     *  None
 510:Generated_Source\PSoC5/PWM3.c ****     *
 511:Generated_Source\PSoC5/PWM3.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM3.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM3.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM3.c ****     *
 515:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM3.c ****                                        
 518:Generated_Source\PSoC5/PWM3.c ****     {
 519:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG16(PWM3_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM3.c ****         #else
 522:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG8(PWM3_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM3.c **** 
 525:Generated_Source\PSoC5/PWM3.c ****         #if (PWM3_PWMMode == PWM3__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM3.c ****             #if(PWM3_UsingFixedFunction)
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 13


 527:Generated_Source\PSoC5/PWM3.c ****                 CY_SET_REG16(PWM3_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM3.c ****             #else
 529:Generated_Source\PSoC5/PWM3.c ****                 CY_SET_REG8(PWM3_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM3.c ****             #endif /* (PWM3_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_PWMMode == PWM3__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM3.c ****     }
 533:Generated_Source\PSoC5/PWM3.c **** 
 534:Generated_Source\PSoC5/PWM3.c **** 
 535:Generated_Source\PSoC5/PWM3.c **** #else
 536:Generated_Source\PSoC5/PWM3.c **** 
 537:Generated_Source\PSoC5/PWM3.c **** 
 538:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteCompare1
 540:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM3.c ****     *
 542:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM3.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM3.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM3.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM3.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM3.c ****     *
 548:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM3.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM3.c ****     *
 551:Generated_Source\PSoC5/PWM3.c ****     * Return:
 552:Generated_Source\PSoC5/PWM3.c ****     *  None
 553:Generated_Source\PSoC5/PWM3.c ****     *
 554:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM3.c ****                                         
 557:Generated_Source\PSoC5/PWM3.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG16(PWM3_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM3.c ****         #else
 561:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG8(PWM3_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 24650040 		.word	1073767716
 173              		.cfi_endproc
 174              	.LFE7:
 175              		.size	PWM3_WriteCompare1, .-PWM3_WriteCompare1
 176              		.section	.text.PWM3_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	PWM3_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 14


 181              		.type	PWM3_WriteCompare2, %function
 182              	PWM3_WriteCompare2:
 183              	.LFB8:
 562:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM3.c ****     }
 564:Generated_Source\PSoC5/PWM3.c **** 
 565:Generated_Source\PSoC5/PWM3.c **** 
 566:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteCompare2
 568:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM3.c ****     *
 570:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM3.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM3.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM3.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM3.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM3.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM3.c ****     *
 577:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM3.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM3.c ****     *
 580:Generated_Source\PSoC5/PWM3.c ****     * Return:
 581:Generated_Source\PSoC5/PWM3.c ****     *  None
 582:Generated_Source\PSoC5/PWM3.c ****     *
 583:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM3.c ****                                         
 586:Generated_Source\PSoC5/PWM3.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG16(PWM3_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM3.c ****         #else
 590:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG8(PWM3_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 34650040 		.word	1073767732
 198              		.cfi_endproc
 199              	.LFE8:
 200              		.size	PWM3_WriteCompare2, .-PWM3_WriteCompare2
 201              		.section	.text.PWM3_Init,"ax",%progbits
 202              		.align	2
 203              		.global	PWM3_Init
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM3_Init, %function
 207              	PWM3_Init:
 208              	.LFB1:
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 15


  85:Generated_Source\PSoC5/PWM3.c ****     #if (PWM3_UsingFixedFunction || PWM3_UseControl)
 209              		.loc 1 85 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM3.c ****                 ((uint8)(~PWM3_CTRL_CMPMODE1_MASK));
 217              		.loc 1 117 0
 218 0002 0C4A     		ldr	r2, .L24
 219 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 220 0006 03F0C003 		and	r3, r3, #192
 221              	.LVL4:
 119:Generated_Source\PSoC5/PWM3.c ****                                    PWM3_DEFAULT_COMPARE1_MODE;
 222              		.loc 1 119 0
 223 000a 43F00903 		orr	r3, r3, #9
 224              	.LVL5:
 225 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM3.c ****         #else /* (PWM3_Resolution == 16)*/
 226              		.loc 1 126 0
 227 0010 2032     		adds	r2, r2, #32
 228 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 229 0014 43F00103 		orr	r3, r3, #1
 230 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM3.c ****     #endif /* (!PWM3_UsingFixedFunction) */
 231              		.loc 1 133 0
 232 001a FF20     		movs	r0, #255
 233 001c FFF7FEFF 		bl	PWM3_WriteCounter
 234              	.LVL6:
 136:Generated_Source\PSoC5/PWM3.c **** 
 235              		.loc 1 136 0
 236 0020 FF20     		movs	r0, #255
 237 0022 FFF7FEFF 		bl	PWM3_WritePeriod
 238              	.LVL7:
 141:Generated_Source\PSoC5/PWM3.c ****             PWM3_WriteCompare2(PWM3_INIT_COMPARE_VALUE2);
 239              		.loc 1 141 0
 240 0026 7D20     		movs	r0, #125
 241 0028 FFF7FEFF 		bl	PWM3_WriteCompare1
 242              	.LVL8:
 142:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UseOneCompareMode) */
 243              		.loc 1 142 0
 244 002c 7D20     		movs	r0, #125
 245 002e FFF7FEFF 		bl	PWM3_WriteCompare2
 246              	.LVL9:
 247 0032 08BD     		pop	{r3, pc}
 248              	.L25:
 249              		.align	2
 250              	.L24:
 251 0034 74650040 		.word	1073767796
 252              		.cfi_endproc
 253              	.LFE1:
 254              		.size	PWM3_Init, .-PWM3_Init
 255              		.section	.text.PWM3_Start,"ax",%progbits
 256              		.align	2
 257              		.global	PWM3_Start
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 16


 258              		.thumb
 259              		.thumb_func
 260              		.type	PWM3_Start, %function
 261              	PWM3_Start:
 262              	.LFB0:
  56:Generated_Source\PSoC5/PWM3.c ****     /* If not Initialized then initialize all required hardware and software */
 263              		.loc 1 56 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM3.c ****     {
 271              		.loc 1 58 0
 272 0002 054B     		ldr	r3, .L29
 273 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274 0006 23B9     		cbnz	r3, .L27
  60:Generated_Source\PSoC5/PWM3.c ****         PWM3_initVar = 1u;
 275              		.loc 1 60 0
 276 0008 FFF7FEFF 		bl	PWM3_Init
 277              	.LVL10:
  61:Generated_Source\PSoC5/PWM3.c ****     }
 278              		.loc 1 61 0
 279 000c 0122     		movs	r2, #1
 280 000e 024B     		ldr	r3, .L29
 281 0010 1A70     		strb	r2, [r3]
 282              	.L27:
  63:Generated_Source\PSoC5/PWM3.c **** 
 283              		.loc 1 63 0
 284 0012 FFF7FEFF 		bl	PWM3_Enable
 285              	.LVL11:
 286 0016 08BD     		pop	{r3, pc}
 287              	.L30:
 288              		.align	2
 289              	.L29:
 290 0018 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE0:
 293              		.size	PWM3_Start, .-PWM3_Start
 294              		.section	.text.PWM3_ReadControlRegister,"ax",%progbits
 295              		.align	2
 296              		.global	PWM3_ReadControlRegister
 297              		.thumb
 298              		.thumb_func
 299              		.type	PWM3_ReadControlRegister, %function
 300              	PWM3_ReadControlRegister:
 301              	.LFB9:
 591:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM3.c ****     }
 593:Generated_Source\PSoC5/PWM3.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM3.c **** 
 595:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM3.c **** 
 597:Generated_Source\PSoC5/PWM3.c **** 
 598:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 17


 599:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteDeadTime
 600:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM3.c ****     *
 602:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM3.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM3.c ****     *
 605:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM3.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM3.c ****     *
 608:Generated_Source\PSoC5/PWM3.c ****     * Return:
 609:Generated_Source\PSoC5/PWM3.c ****     *  None
 610:Generated_Source\PSoC5/PWM3.c ****     *
 611:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM3.c ****     {
 614:Generated_Source\PSoC5/PWM3.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM3.c ****         #if(!PWM3_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM3.c ****             CY_SET_REG8(PWM3_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM3.c ****         #else
 618:Generated_Source\PSoC5/PWM3.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM3.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM3.c ****             PWM3_DEADBAND_COUNT &= ((uint8)(~PWM3_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM3.c **** 
 622:Generated_Source\PSoC5/PWM3.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM3.c ****             #if(PWM3_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM3.c ****                 PWM3_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM3_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM3.c ****                                                     PWM3_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM3.c ****             #else
 627:Generated_Source\PSoC5/PWM3.c ****                 PWM3_DEADBAND_COUNT |= deadtime & PWM3_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM3.c ****             #endif /* (PWM3_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM3.c **** 
 630:Generated_Source\PSoC5/PWM3.c ****         #endif /* (!PWM3_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM3.c ****     }
 632:Generated_Source\PSoC5/PWM3.c **** 
 633:Generated_Source\PSoC5/PWM3.c **** 
 634:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadDeadTime
 636:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM3.c ****     *
 638:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM3.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM3.c ****     *
 641:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM3.c ****     *  None
 643:Generated_Source\PSoC5/PWM3.c ****     *
 644:Generated_Source\PSoC5/PWM3.c ****     * Return:
 645:Generated_Source\PSoC5/PWM3.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM3.c ****     *
 647:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM3.c ****     {
 650:Generated_Source\PSoC5/PWM3.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM3.c ****         #if(!PWM3_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM3.c ****             return (CY_GET_REG8(PWM3_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM3.c ****         #else
 654:Generated_Source\PSoC5/PWM3.c **** 
 655:Generated_Source\PSoC5/PWM3.c ****             /* Otherwise the data has to be masked and offset */
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 18


 656:Generated_Source\PSoC5/PWM3.c ****             #if(PWM3_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM3.c ****                 return ((uint8)(((uint8)(PWM3_DEADBAND_COUNT & PWM3_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM3.c ****                                                                            PWM3_DEADBAND_COUNT_SHIF
 659:Generated_Source\PSoC5/PWM3.c ****             #else
 660:Generated_Source\PSoC5/PWM3.c ****                 return (PWM3_DEADBAND_COUNT & PWM3_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM3.c ****             #endif /* (PWM3_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM3.c ****         #endif /* (!PWM3_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM3.c ****     }
 664:Generated_Source\PSoC5/PWM3.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM3.c **** 
 666:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_UseStatus || PWM3_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM3.c **** 
 668:Generated_Source\PSoC5/PWM3.c **** 
 669:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_SetInterruptMode
 671:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM3.c ****     *
 673:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM3.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM3.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM3.c ****     *
 677:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM3.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM3.c ****     *
 680:Generated_Source\PSoC5/PWM3.c ****     * Return:
 681:Generated_Source\PSoC5/PWM3.c ****     *  None
 682:Generated_Source\PSoC5/PWM3.c ****     *
 683:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM3.c ****     void PWM3_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM3.c ****     {
 686:Generated_Source\PSoC5/PWM3.c ****         CY_SET_REG8(PWM3_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM3.c ****     }
 688:Generated_Source\PSoC5/PWM3.c **** 
 689:Generated_Source\PSoC5/PWM3.c **** 
 690:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM3.c ****     *
 694:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM3.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM3.c ****     *
 697:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM3.c ****     *  None
 699:Generated_Source\PSoC5/PWM3.c ****     *
 700:Generated_Source\PSoC5/PWM3.c ****     * Return:
 701:Generated_Source\PSoC5/PWM3.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM3.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM3.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM3.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM3.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM3.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM3.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM3.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM3.c ****     *
 710:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM3.c ****     {
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 19


 713:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM3.c ****     }
 715:Generated_Source\PSoC5/PWM3.c **** 
 716:Generated_Source\PSoC5/PWM3.c **** #endif /* (PWM3_UseStatus || PWM3_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM3.c **** 
 718:Generated_Source\PSoC5/PWM3.c **** 
 719:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_UseControl)
 720:Generated_Source\PSoC5/PWM3.c **** 
 721:Generated_Source\PSoC5/PWM3.c **** 
 722:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadControlRegister
 724:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM3.c ****     *
 726:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM3.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM3.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM3.c ****     *
 730:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM3.c ****     *  None
 732:Generated_Source\PSoC5/PWM3.c ****     *
 733:Generated_Source\PSoC5/PWM3.c ****     * Return:
 734:Generated_Source\PSoC5/PWM3.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM3.c ****     *
 736:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM3.c ****     {
 302              		.loc 1 738 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM3.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM3.c **** 
 741:Generated_Source\PSoC5/PWM3.c ****         result = CY_GET_REG8(PWM3_CONTROL_PTR);
 307              		.loc 1 741 0
 308 0000 014B     		ldr	r3, .L32
 309 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 310              	.LVL12:
 742:Generated_Source\PSoC5/PWM3.c ****         return (result);
 743:Generated_Source\PSoC5/PWM3.c ****     }
 311              		.loc 1 743 0
 312 0004 7047     		bx	lr
 313              	.L33:
 314 0006 00BF     		.align	2
 315              	.L32:
 316 0008 74650040 		.word	1073767796
 317              		.cfi_endproc
 318              	.LFE9:
 319              		.size	PWM3_ReadControlRegister, .-PWM3_ReadControlRegister
 320              		.section	.text.PWM3_WriteControlRegister,"ax",%progbits
 321              		.align	2
 322              		.global	PWM3_WriteControlRegister
 323              		.thumb
 324              		.thumb_func
 325              		.type	PWM3_WriteControlRegister, %function
 326              	PWM3_WriteControlRegister:
 327              	.LFB10:
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 20


 744:Generated_Source\PSoC5/PWM3.c **** 
 745:Generated_Source\PSoC5/PWM3.c **** 
 746:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_WriteControlRegister
 748:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM3.c ****     *
 750:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM3.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM3.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM3.c ****     *
 754:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM3.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM3.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM3.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM3.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM3.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM3.c ****     *
 761:Generated_Source\PSoC5/PWM3.c ****     * Return:
 762:Generated_Source\PSoC5/PWM3.c ****     *  None
 763:Generated_Source\PSoC5/PWM3.c ****     *
 764:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM3.c ****     void PWM3_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM3.c ****     {
 328              		.loc 1 766 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL13:
 767:Generated_Source\PSoC5/PWM3.c ****         CY_SET_REG8(PWM3_CONTROL_PTR, control);
 334              		.loc 1 767 0
 335 0000 014B     		ldr	r3, .L35
 336 0002 1870     		strb	r0, [r3]
 337 0004 7047     		bx	lr
 338              	.L36:
 339 0006 00BF     		.align	2
 340              	.L35:
 341 0008 74650040 		.word	1073767796
 342              		.cfi_endproc
 343              	.LFE10:
 344              		.size	PWM3_WriteControlRegister, .-PWM3_WriteControlRegister
 345              		.section	.text.PWM3_ReadCapture,"ax",%progbits
 346              		.align	2
 347              		.global	PWM3_ReadCapture
 348              		.thumb
 349              		.thumb_func
 350              		.type	PWM3_ReadCapture, %function
 351              	PWM3_ReadCapture:
 352              	.LFB11:
 768:Generated_Source\PSoC5/PWM3.c ****     }
 769:Generated_Source\PSoC5/PWM3.c **** 
 770:Generated_Source\PSoC5/PWM3.c **** #endif /* (PWM3_UseControl) */
 771:Generated_Source\PSoC5/PWM3.c **** 
 772:Generated_Source\PSoC5/PWM3.c **** 
 773:Generated_Source\PSoC5/PWM3.c **** #if (!PWM3_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM3.c **** 
 775:Generated_Source\PSoC5/PWM3.c **** 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 21


 776:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadCapture
 778:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM3.c ****     *
 780:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM3.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM3.c ****     *
 783:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM3.c ****     *  None
 785:Generated_Source\PSoC5/PWM3.c ****     *
 786:Generated_Source\PSoC5/PWM3.c ****     * Return:
 787:Generated_Source\PSoC5/PWM3.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM3.c ****     *
 789:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM3.c ****     {
 353              		.loc 1 791 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_CAPTURE_LSB_PTR));
 358              		.loc 1 792 0
 359 0000 014B     		ldr	r3, .L38
 360 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM3.c ****     }
 361              		.loc 1 793 0
 362 0004 7047     		bx	lr
 363              	.L39:
 364 0006 00BF     		.align	2
 365              	.L38:
 366 0008 54650040 		.word	1073767764
 367              		.cfi_endproc
 368              	.LFE11:
 369              		.size	PWM3_ReadCapture, .-PWM3_ReadCapture
 370              		.section	.text.PWM3_ReadCompare1,"ax",%progbits
 371              		.align	2
 372              		.global	PWM3_ReadCompare1
 373              		.thumb
 374              		.thumb_func
 375              		.type	PWM3_ReadCompare1, %function
 376              	PWM3_ReadCompare1:
 377              	.LFB12:
 794:Generated_Source\PSoC5/PWM3.c **** 
 795:Generated_Source\PSoC5/PWM3.c **** #endif /* (!PWM3_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM3.c **** 
 797:Generated_Source\PSoC5/PWM3.c **** 
 798:Generated_Source\PSoC5/PWM3.c **** #if (PWM3_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM3.c **** 
 800:Generated_Source\PSoC5/PWM3.c **** 
 801:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadCompare
 803:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM3.c ****     *
 805:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM3.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM3.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 22


 808:Generated_Source\PSoC5/PWM3.c ****     *
 809:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM3.c ****     *  None
 811:Generated_Source\PSoC5/PWM3.c ****     *
 812:Generated_Source\PSoC5/PWM3.c ****     * Return:
 813:Generated_Source\PSoC5/PWM3.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM3.c ****     *
 815:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM3.c ****     {
 818:Generated_Source\PSoC5/PWM3.c ****         #if(PWM3_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM3.c ****             return ((uint8)CY_GET_REG16(PWM3_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM3.c ****         #else
 821:Generated_Source\PSoC5/PWM3.c ****             return (CY_GET_REG8(PWM3_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM3.c ****         #endif /* (PWM3_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM3.c ****     }
 824:Generated_Source\PSoC5/PWM3.c **** 
 825:Generated_Source\PSoC5/PWM3.c **** #else
 826:Generated_Source\PSoC5/PWM3.c **** 
 827:Generated_Source\PSoC5/PWM3.c **** 
 828:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadCompare1
 830:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM3.c ****     *
 832:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM3.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM3.c ****     *
 835:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM3.c ****     *  None
 837:Generated_Source\PSoC5/PWM3.c ****     *
 838:Generated_Source\PSoC5/PWM3.c ****     * Return:
 839:Generated_Source\PSoC5/PWM3.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM3.c ****     *
 841:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM3.c ****     {
 378              		.loc 1 843 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_COMPARE1_LSB_PTR));
 383              		.loc 1 844 0
 384 0000 014B     		ldr	r3, .L41
 385 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/PWM3.c ****     }
 386              		.loc 1 845 0
 387 0004 7047     		bx	lr
 388              	.L42:
 389 0006 00BF     		.align	2
 390              	.L41:
 391 0008 24650040 		.word	1073767716
 392              		.cfi_endproc
 393              	.LFE12:
 394              		.size	PWM3_ReadCompare1, .-PWM3_ReadCompare1
 395              		.section	.text.PWM3_ReadCompare2,"ax",%progbits
 396              		.align	2
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 23


 397              		.global	PWM3_ReadCompare2
 398              		.thumb
 399              		.thumb_func
 400              		.type	PWM3_ReadCompare2, %function
 401              	PWM3_ReadCompare2:
 402              	.LFB13:
 846:Generated_Source\PSoC5/PWM3.c **** 
 847:Generated_Source\PSoC5/PWM3.c **** 
 848:Generated_Source\PSoC5/PWM3.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM3.c ****     * Function Name: PWM3_ReadCompare2
 850:Generated_Source\PSoC5/PWM3.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM3.c ****     *
 852:Generated_Source\PSoC5/PWM3.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM3.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM3.c ****     *
 855:Generated_Source\PSoC5/PWM3.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM3.c ****     *  None
 857:Generated_Source\PSoC5/PWM3.c ****     *
 858:Generated_Source\PSoC5/PWM3.c ****     * Return:
 859:Generated_Source\PSoC5/PWM3.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM3.c ****     *
 861:Generated_Source\PSoC5/PWM3.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM3.c ****     uint8 PWM3_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM3.c ****     {
 403              		.loc 1 863 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_COMPARE2_LSB_PTR));
 408              		.loc 1 864 0
 409 0000 014B     		ldr	r3, .L44
 410 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/PWM3.c ****     }
 411              		.loc 1 865 0
 412 0004 7047     		bx	lr
 413              	.L45:
 414 0006 00BF     		.align	2
 415              	.L44:
 416 0008 34650040 		.word	1073767732
 417              		.cfi_endproc
 418              	.LFE13:
 419              		.size	PWM3_ReadCompare2, .-PWM3_ReadCompare2
 420              		.section	.text.PWM3_ReadPeriod,"ax",%progbits
 421              		.align	2
 422              		.global	PWM3_ReadPeriod
 423              		.thumb
 424              		.thumb_func
 425              		.type	PWM3_ReadPeriod, %function
 426              	PWM3_ReadPeriod:
 427              	.LFB14:
 866:Generated_Source\PSoC5/PWM3.c **** 
 867:Generated_Source\PSoC5/PWM3.c **** #endif /* (PWM3_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM3.c **** 
 869:Generated_Source\PSoC5/PWM3.c **** 
 870:Generated_Source\PSoC5/PWM3.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM3.c **** * Function Name: PWM3_ReadPeriod
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 24


 872:Generated_Source\PSoC5/PWM3.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM3.c **** *
 874:Generated_Source\PSoC5/PWM3.c **** * Summary:
 875:Generated_Source\PSoC5/PWM3.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM3.c **** *
 877:Generated_Source\PSoC5/PWM3.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM3.c **** *  None
 879:Generated_Source\PSoC5/PWM3.c **** *
 880:Generated_Source\PSoC5/PWM3.c **** * Return:
 881:Generated_Source\PSoC5/PWM3.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM3.c **** *
 883:Generated_Source\PSoC5/PWM3.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM3.c **** uint8 PWM3_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM3.c **** {
 428              		.loc 1 885 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM3.c ****     #if(PWM3_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM3.c ****         return ((uint8)CY_GET_REG16(PWM3_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM3.c ****     #else
 889:Generated_Source\PSoC5/PWM3.c ****         return (CY_GET_REG8(PWM3_PERIOD_LSB_PTR));
 433              		.loc 1 889 0
 434 0000 014B     		ldr	r3, .L47
 435 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM3.c ****     #endif /* (PWM3_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM3.c **** }
 436              		.loc 1 891 0
 437 0004 7047     		bx	lr
 438              	.L48:
 439 0006 00BF     		.align	2
 440              	.L47:
 441 0008 44650040 		.word	1073767748
 442              		.cfi_endproc
 443              	.LFE14:
 444              		.size	PWM3_ReadPeriod, .-PWM3_ReadPeriod
 445              		.global	PWM3_initVar
 446              		.bss
 447              		.set	.LANCHOR0,. + 0
 448              		.type	PWM3_initVar, %object
 449              		.size	PWM3_initVar, 1
 450              	PWM3_initVar:
 451 0000 00       		.space	1
 452              		.text
 453              	.Letext0:
 454              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 455              		.section	.debug_info,"",%progbits
 456              	.Ldebug_info0:
 457 0000 C4020000 		.4byte	0x2c4
 458 0004 0400     		.2byte	0x4
 459 0006 00000000 		.4byte	.Ldebug_abbrev0
 460 000a 04       		.byte	0x4
 461 000b 01       		.uleb128 0x1
 462 000c D6000000 		.4byte	.LASF36
 463 0010 0C       		.byte	0xc
 464 0011 6A020000 		.4byte	.LASF37
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 25


 465 0015 00000000 		.4byte	.LASF38
 466 0019 00000000 		.4byte	.Ldebug_ranges0+0
 467 001d 00000000 		.4byte	0
 468 0021 00000000 		.4byte	.Ldebug_line0
 469 0025 02       		.uleb128 0x2
 470 0026 01       		.byte	0x1
 471 0027 06       		.byte	0x6
 472 0028 AE020000 		.4byte	.LASF0
 473 002c 02       		.uleb128 0x2
 474 002d 01       		.byte	0x1
 475 002e 08       		.byte	0x8
 476 002f C8000000 		.4byte	.LASF1
 477 0033 02       		.uleb128 0x2
 478 0034 02       		.byte	0x2
 479 0035 05       		.byte	0x5
 480 0036 49020000 		.4byte	.LASF2
 481 003a 02       		.uleb128 0x2
 482 003b 02       		.byte	0x2
 483 003c 07       		.byte	0x7
 484 003d 68000000 		.4byte	.LASF3
 485 0041 02       		.uleb128 0x2
 486 0042 04       		.byte	0x4
 487 0043 05       		.byte	0x5
 488 0044 88020000 		.4byte	.LASF4
 489 0048 02       		.uleb128 0x2
 490 0049 04       		.byte	0x4
 491 004a 07       		.byte	0x7
 492 004b 69010000 		.4byte	.LASF5
 493 004f 02       		.uleb128 0x2
 494 0050 08       		.byte	0x8
 495 0051 05       		.byte	0x5
 496 0052 2C020000 		.4byte	.LASF6
 497 0056 02       		.uleb128 0x2
 498 0057 08       		.byte	0x8
 499 0058 07       		.byte	0x7
 500 0059 C3010000 		.4byte	.LASF7
 501 005d 03       		.uleb128 0x3
 502 005e 04       		.byte	0x4
 503 005f 05       		.byte	0x5
 504 0060 696E7400 		.ascii	"int\000"
 505 0064 02       		.uleb128 0x2
 506 0065 04       		.byte	0x4
 507 0066 07       		.byte	0x7
 508 0067 AB010000 		.4byte	.LASF8
 509 006b 04       		.uleb128 0x4
 510 006c 7B010000 		.4byte	.LASF12
 511 0070 02       		.byte	0x2
 512 0071 E701     		.2byte	0x1e7
 513 0073 2C000000 		.4byte	0x2c
 514 0077 02       		.uleb128 0x2
 515 0078 04       		.byte	0x4
 516 0079 04       		.byte	0x4
 517 007a BA000000 		.4byte	.LASF9
 518 007e 02       		.uleb128 0x2
 519 007f 08       		.byte	0x8
 520 0080 04       		.byte	0x4
 521 0081 A4010000 		.4byte	.LASF10
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 26


 522 0085 02       		.uleb128 0x2
 523 0086 01       		.byte	0x1
 524 0087 08       		.byte	0x8
 525 0088 3A020000 		.4byte	.LASF11
 526 008c 04       		.uleb128 0x4
 527 008d 64010000 		.4byte	.LASF13
 528 0091 02       		.byte	0x2
 529 0092 9102     		.2byte	0x291
 530 0094 98000000 		.4byte	0x98
 531 0098 05       		.uleb128 0x5
 532 0099 6B000000 		.4byte	0x6b
 533 009d 02       		.uleb128 0x2
 534 009e 08       		.byte	0x8
 535 009f 04       		.byte	0x4
 536 00a0 A2020000 		.4byte	.LASF14
 537 00a4 02       		.uleb128 0x2
 538 00a5 04       		.byte	0x4
 539 00a6 07       		.byte	0x7
 540 00a7 12020000 		.4byte	.LASF15
 541 00ab 06       		.uleb128 0x6
 542 00ac 95000000 		.4byte	.LASF16
 543 00b0 01       		.byte	0x1
 544 00b1 C7       		.byte	0xc7
 545 00b2 00000000 		.4byte	.LFB2
 546 00b6 10000000 		.4byte	.LFE2-.LFB2
 547 00ba 01       		.uleb128 0x1
 548 00bb 9C       		.byte	0x9c
 549 00bc 06       		.uleb128 0x6
 550 00bd 3F020000 		.4byte	.LASF17
 551 00c1 01       		.byte	0x1
 552 00c2 E9       		.byte	0xe9
 553 00c3 00000000 		.4byte	.LFB3
 554 00c7 10000000 		.4byte	.LFE3-.LFB3
 555 00cb 01       		.uleb128 0x1
 556 00cc 9C       		.byte	0x9c
 557 00cd 07       		.uleb128 0x7
 558 00ce 58020000 		.4byte	.LASF18
 559 00d2 01       		.byte	0x1
 560 00d3 9301     		.2byte	0x193
 561 00d5 00000000 		.4byte	.LFB4
 562 00d9 0C000000 		.4byte	.LFE4-.LFB4
 563 00dd 01       		.uleb128 0x1
 564 00de 9C       		.byte	0x9c
 565 00df F2000000 		.4byte	0xf2
 566 00e3 08       		.uleb128 0x8
 567 00e4 C0000000 		.4byte	.LASF20
 568 00e8 01       		.byte	0x1
 569 00e9 9301     		.2byte	0x193
 570 00eb 6B000000 		.4byte	0x6b
 571 00ef 01       		.uleb128 0x1
 572 00f0 50       		.byte	0x50
 573 00f1 00       		.byte	0
 574 00f2 09       		.uleb128 0x9
 575 00f3 1B020000 		.4byte	.LASF31
 576 00f7 01       		.byte	0x1
 577 00f8 A901     		.2byte	0x1a9
 578 00fa 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 27


 579 00fe 00000000 		.4byte	.LFB5
 580 0102 14000000 		.4byte	.LFE5-.LFB5
 581 0106 01       		.uleb128 0x1
 582 0107 9C       		.byte	0x9c
 583 0108 07       		.uleb128 0x7
 584 0109 91020000 		.4byte	.LASF19
 585 010d 01       		.byte	0x1
 586 010e E201     		.2byte	0x1e2
 587 0110 00000000 		.4byte	.LFB6
 588 0114 0C000000 		.4byte	.LFE6-.LFB6
 589 0118 01       		.uleb128 0x1
 590 0119 9C       		.byte	0x9c
 591 011a 2D010000 		.4byte	0x12d
 592 011e 08       		.uleb128 0x8
 593 011f 61000000 		.4byte	.LASF21
 594 0123 01       		.byte	0x1
 595 0124 E201     		.2byte	0x1e2
 596 0126 6B000000 		.4byte	0x6b
 597 012a 01       		.uleb128 0x1
 598 012b 50       		.byte	0x50
 599 012c 00       		.byte	0
 600 012d 07       		.uleb128 0x7
 601 012e C2020000 		.4byte	.LASF22
 602 0132 01       		.byte	0x1
 603 0133 2B02     		.2byte	0x22b
 604 0135 00000000 		.4byte	.LFB7
 605 0139 0C000000 		.4byte	.LFE7-.LFB7
 606 013d 01       		.uleb128 0x1
 607 013e 9C       		.byte	0x9c
 608 013f 52010000 		.4byte	0x152
 609 0143 08       		.uleb128 0x8
 610 0144 BA020000 		.4byte	.LASF23
 611 0148 01       		.byte	0x1
 612 0149 2B02     		.2byte	0x22b
 613 014b 6B000000 		.4byte	0x6b
 614 014f 01       		.uleb128 0x1
 615 0150 50       		.byte	0x50
 616 0151 00       		.byte	0
 617 0152 07       		.uleb128 0x7
 618 0153 D5020000 		.4byte	.LASF24
 619 0157 01       		.byte	0x1
 620 0158 4802     		.2byte	0x248
 621 015a 00000000 		.4byte	.LFB8
 622 015e 0C000000 		.4byte	.LFE8-.LFB8
 623 0162 01       		.uleb128 0x1
 624 0163 9C       		.byte	0x9c
 625 0164 77010000 		.4byte	0x177
 626 0168 08       		.uleb128 0x8
 627 0169 BA020000 		.4byte	.LASF23
 628 016d 01       		.byte	0x1
 629 016e 4802     		.2byte	0x248
 630 0170 6B000000 		.4byte	0x6b
 631 0174 01       		.uleb128 0x1
 632 0175 50       		.byte	0x50
 633 0176 00       		.byte	0
 634 0177 0A       		.uleb128 0xa
 635 0178 9A010000 		.4byte	.LASF25
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 28


 636 017c 01       		.byte	0x1
 637 017d 54       		.byte	0x54
 638 017e 00000000 		.4byte	.LFB1
 639 0182 38000000 		.4byte	.LFE1-.LFB1
 640 0186 01       		.uleb128 0x1
 641 0187 9C       		.byte	0x9c
 642 0188 E8010000 		.4byte	0x1e8
 643 018c 0B       		.uleb128 0xb
 644 018d 53020000 		.4byte	.LASF27
 645 0191 01       		.byte	0x1
 646 0192 57       		.byte	0x57
 647 0193 6B000000 		.4byte	0x6b
 648 0197 00000000 		.4byte	.LLST0
 649 019b 0C       		.uleb128 0xc
 650 019c 20000000 		.4byte	.LVL6
 651 01a0 CD000000 		.4byte	0xcd
 652 01a4 AF010000 		.4byte	0x1af
 653 01a8 0D       		.uleb128 0xd
 654 01a9 01       		.uleb128 0x1
 655 01aa 50       		.byte	0x50
 656 01ab 02       		.uleb128 0x2
 657 01ac 09       		.byte	0x9
 658 01ad FF       		.byte	0xff
 659 01ae 00       		.byte	0
 660 01af 0C       		.uleb128 0xc
 661 01b0 26000000 		.4byte	.LVL7
 662 01b4 08010000 		.4byte	0x108
 663 01b8 C3010000 		.4byte	0x1c3
 664 01bc 0D       		.uleb128 0xd
 665 01bd 01       		.uleb128 0x1
 666 01be 50       		.byte	0x50
 667 01bf 02       		.uleb128 0x2
 668 01c0 09       		.byte	0x9
 669 01c1 FF       		.byte	0xff
 670 01c2 00       		.byte	0
 671 01c3 0C       		.uleb128 0xc
 672 01c4 2C000000 		.4byte	.LVL8
 673 01c8 2D010000 		.4byte	0x12d
 674 01cc D7010000 		.4byte	0x1d7
 675 01d0 0D       		.uleb128 0xd
 676 01d1 01       		.uleb128 0x1
 677 01d2 50       		.byte	0x50
 678 01d3 02       		.uleb128 0x2
 679 01d4 08       		.byte	0x8
 680 01d5 7D       		.byte	0x7d
 681 01d6 00       		.byte	0
 682 01d7 0E       		.uleb128 0xe
 683 01d8 32000000 		.4byte	.LVL9
 684 01dc 52010000 		.4byte	0x152
 685 01e0 0D       		.uleb128 0xd
 686 01e1 01       		.uleb128 0x1
 687 01e2 50       		.byte	0x50
 688 01e3 02       		.uleb128 0x2
 689 01e4 08       		.byte	0x8
 690 01e5 7D       		.byte	0x7d
 691 01e6 00       		.byte	0
 692 01e7 00       		.byte	0
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 29


 693 01e8 0A       		.uleb128 0xa
 694 01e9 B8010000 		.4byte	.LASF26
 695 01ed 01       		.byte	0x1
 696 01ee 37       		.byte	0x37
 697 01ef 00000000 		.4byte	.LFB0
 698 01f3 1C000000 		.4byte	.LFE0-.LFB0
 699 01f7 01       		.uleb128 0x1
 700 01f8 9C       		.byte	0x9c
 701 01f9 10020000 		.4byte	0x210
 702 01fd 0F       		.uleb128 0xf
 703 01fe 0C000000 		.4byte	.LVL10
 704 0202 77010000 		.4byte	0x177
 705 0206 0F       		.uleb128 0xf
 706 0207 16000000 		.4byte	.LVL11
 707 020b AB000000 		.4byte	0xab
 708 020f 00       		.byte	0
 709 0210 10       		.uleb128 0x10
 710 0211 A1000000 		.4byte	.LASF39
 711 0215 01       		.byte	0x1
 712 0216 E102     		.2byte	0x2e1
 713 0218 6B000000 		.4byte	0x6b
 714 021c 00000000 		.4byte	.LFB9
 715 0220 0C000000 		.4byte	.LFE9-.LFB9
 716 0224 01       		.uleb128 0x1
 717 0225 9C       		.byte	0x9c
 718 0226 39020000 		.4byte	0x239
 719 022a 11       		.uleb128 0x11
 720 022b DA010000 		.4byte	.LASF28
 721 022f 01       		.byte	0x1
 722 0230 E302     		.2byte	0x2e3
 723 0232 6B000000 		.4byte	0x6b
 724 0236 01       		.uleb128 0x1
 725 0237 50       		.byte	0x50
 726 0238 00       		.byte	0
 727 0239 07       		.uleb128 0x7
 728 023a 7B000000 		.4byte	.LASF29
 729 023e 01       		.byte	0x1
 730 023f FD02     		.2byte	0x2fd
 731 0241 00000000 		.4byte	.LFB10
 732 0245 0C000000 		.4byte	.LFE10-.LFB10
 733 0249 01       		.uleb128 0x1
 734 024a 9C       		.byte	0x9c
 735 024b 5E020000 		.4byte	0x25e
 736 024f 08       		.uleb128 0x8
 737 0250 81010000 		.4byte	.LASF30
 738 0254 01       		.byte	0x1
 739 0255 FD02     		.2byte	0x2fd
 740 0257 6B000000 		.4byte	0x6b
 741 025b 01       		.uleb128 0x1
 742 025c 50       		.byte	0x50
 743 025d 00       		.byte	0
 744 025e 09       		.uleb128 0x9
 745 025f 89010000 		.4byte	.LASF32
 746 0263 01       		.byte	0x1
 747 0264 1603     		.2byte	0x316
 748 0266 6B000000 		.4byte	0x6b
 749 026a 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 30


 750 026e 0C000000 		.4byte	.LFE11-.LFB11
 751 0272 01       		.uleb128 0x1
 752 0273 9C       		.byte	0x9c
 753 0274 09       		.uleb128 0x9
 754 0275 EE010000 		.4byte	.LASF33
 755 0279 01       		.byte	0x1
 756 027a 4A03     		.2byte	0x34a
 757 027c 6B000000 		.4byte	0x6b
 758 0280 00000000 		.4byte	.LFB12
 759 0284 0C000000 		.4byte	.LFE12-.LFB12
 760 0288 01       		.uleb128 0x1
 761 0289 9C       		.byte	0x9c
 762 028a 09       		.uleb128 0x9
 763 028b 00020000 		.4byte	.LASF34
 764 028f 01       		.byte	0x1
 765 0290 5E03     		.2byte	0x35e
 766 0292 6B000000 		.4byte	0x6b
 767 0296 00000000 		.4byte	.LFB13
 768 029a 0C000000 		.4byte	.LFE13-.LFB13
 769 029e 01       		.uleb128 0x1
 770 029f 9C       		.byte	0x9c
 771 02a0 09       		.uleb128 0x9
 772 02a1 51000000 		.4byte	.LASF35
 773 02a5 01       		.byte	0x1
 774 02a6 7403     		.2byte	0x374
 775 02a8 6B000000 		.4byte	0x6b
 776 02ac 00000000 		.4byte	.LFB14
 777 02b0 0C000000 		.4byte	.LFE14-.LFB14
 778 02b4 01       		.uleb128 0x1
 779 02b5 9C       		.byte	0x9c
 780 02b6 12       		.uleb128 0x12
 781 02b7 E1010000 		.4byte	.LASF40
 782 02bb 01       		.byte	0x1
 783 02bc 20       		.byte	0x20
 784 02bd 6B000000 		.4byte	0x6b
 785 02c1 05       		.uleb128 0x5
 786 02c2 03       		.byte	0x3
 787 02c3 00000000 		.4byte	PWM3_initVar
 788 02c7 00       		.byte	0
 789              		.section	.debug_abbrev,"",%progbits
 790              	.Ldebug_abbrev0:
 791 0000 01       		.uleb128 0x1
 792 0001 11       		.uleb128 0x11
 793 0002 01       		.byte	0x1
 794 0003 25       		.uleb128 0x25
 795 0004 0E       		.uleb128 0xe
 796 0005 13       		.uleb128 0x13
 797 0006 0B       		.uleb128 0xb
 798 0007 03       		.uleb128 0x3
 799 0008 0E       		.uleb128 0xe
 800 0009 1B       		.uleb128 0x1b
 801 000a 0E       		.uleb128 0xe
 802 000b 55       		.uleb128 0x55
 803 000c 17       		.uleb128 0x17
 804 000d 11       		.uleb128 0x11
 805 000e 01       		.uleb128 0x1
 806 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 31


 807 0010 17       		.uleb128 0x17
 808 0011 00       		.byte	0
 809 0012 00       		.byte	0
 810 0013 02       		.uleb128 0x2
 811 0014 24       		.uleb128 0x24
 812 0015 00       		.byte	0
 813 0016 0B       		.uleb128 0xb
 814 0017 0B       		.uleb128 0xb
 815 0018 3E       		.uleb128 0x3e
 816 0019 0B       		.uleb128 0xb
 817 001a 03       		.uleb128 0x3
 818 001b 0E       		.uleb128 0xe
 819 001c 00       		.byte	0
 820 001d 00       		.byte	0
 821 001e 03       		.uleb128 0x3
 822 001f 24       		.uleb128 0x24
 823 0020 00       		.byte	0
 824 0021 0B       		.uleb128 0xb
 825 0022 0B       		.uleb128 0xb
 826 0023 3E       		.uleb128 0x3e
 827 0024 0B       		.uleb128 0xb
 828 0025 03       		.uleb128 0x3
 829 0026 08       		.uleb128 0x8
 830 0027 00       		.byte	0
 831 0028 00       		.byte	0
 832 0029 04       		.uleb128 0x4
 833 002a 16       		.uleb128 0x16
 834 002b 00       		.byte	0
 835 002c 03       		.uleb128 0x3
 836 002d 0E       		.uleb128 0xe
 837 002e 3A       		.uleb128 0x3a
 838 002f 0B       		.uleb128 0xb
 839 0030 3B       		.uleb128 0x3b
 840 0031 05       		.uleb128 0x5
 841 0032 49       		.uleb128 0x49
 842 0033 13       		.uleb128 0x13
 843 0034 00       		.byte	0
 844 0035 00       		.byte	0
 845 0036 05       		.uleb128 0x5
 846 0037 35       		.uleb128 0x35
 847 0038 00       		.byte	0
 848 0039 49       		.uleb128 0x49
 849 003a 13       		.uleb128 0x13
 850 003b 00       		.byte	0
 851 003c 00       		.byte	0
 852 003d 06       		.uleb128 0x6
 853 003e 2E       		.uleb128 0x2e
 854 003f 00       		.byte	0
 855 0040 3F       		.uleb128 0x3f
 856 0041 19       		.uleb128 0x19
 857 0042 03       		.uleb128 0x3
 858 0043 0E       		.uleb128 0xe
 859 0044 3A       		.uleb128 0x3a
 860 0045 0B       		.uleb128 0xb
 861 0046 3B       		.uleb128 0x3b
 862 0047 0B       		.uleb128 0xb
 863 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 32


 864 0049 19       		.uleb128 0x19
 865 004a 11       		.uleb128 0x11
 866 004b 01       		.uleb128 0x1
 867 004c 12       		.uleb128 0x12
 868 004d 06       		.uleb128 0x6
 869 004e 40       		.uleb128 0x40
 870 004f 18       		.uleb128 0x18
 871 0050 9742     		.uleb128 0x2117
 872 0052 19       		.uleb128 0x19
 873 0053 00       		.byte	0
 874 0054 00       		.byte	0
 875 0055 07       		.uleb128 0x7
 876 0056 2E       		.uleb128 0x2e
 877 0057 01       		.byte	0x1
 878 0058 3F       		.uleb128 0x3f
 879 0059 19       		.uleb128 0x19
 880 005a 03       		.uleb128 0x3
 881 005b 0E       		.uleb128 0xe
 882 005c 3A       		.uleb128 0x3a
 883 005d 0B       		.uleb128 0xb
 884 005e 3B       		.uleb128 0x3b
 885 005f 05       		.uleb128 0x5
 886 0060 27       		.uleb128 0x27
 887 0061 19       		.uleb128 0x19
 888 0062 11       		.uleb128 0x11
 889 0063 01       		.uleb128 0x1
 890 0064 12       		.uleb128 0x12
 891 0065 06       		.uleb128 0x6
 892 0066 40       		.uleb128 0x40
 893 0067 18       		.uleb128 0x18
 894 0068 9742     		.uleb128 0x2117
 895 006a 19       		.uleb128 0x19
 896 006b 01       		.uleb128 0x1
 897 006c 13       		.uleb128 0x13
 898 006d 00       		.byte	0
 899 006e 00       		.byte	0
 900 006f 08       		.uleb128 0x8
 901 0070 05       		.uleb128 0x5
 902 0071 00       		.byte	0
 903 0072 03       		.uleb128 0x3
 904 0073 0E       		.uleb128 0xe
 905 0074 3A       		.uleb128 0x3a
 906 0075 0B       		.uleb128 0xb
 907 0076 3B       		.uleb128 0x3b
 908 0077 05       		.uleb128 0x5
 909 0078 49       		.uleb128 0x49
 910 0079 13       		.uleb128 0x13
 911 007a 02       		.uleb128 0x2
 912 007b 18       		.uleb128 0x18
 913 007c 00       		.byte	0
 914 007d 00       		.byte	0
 915 007e 09       		.uleb128 0x9
 916 007f 2E       		.uleb128 0x2e
 917 0080 00       		.byte	0
 918 0081 3F       		.uleb128 0x3f
 919 0082 19       		.uleb128 0x19
 920 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 33


 921 0084 0E       		.uleb128 0xe
 922 0085 3A       		.uleb128 0x3a
 923 0086 0B       		.uleb128 0xb
 924 0087 3B       		.uleb128 0x3b
 925 0088 05       		.uleb128 0x5
 926 0089 27       		.uleb128 0x27
 927 008a 19       		.uleb128 0x19
 928 008b 49       		.uleb128 0x49
 929 008c 13       		.uleb128 0x13
 930 008d 11       		.uleb128 0x11
 931 008e 01       		.uleb128 0x1
 932 008f 12       		.uleb128 0x12
 933 0090 06       		.uleb128 0x6
 934 0091 40       		.uleb128 0x40
 935 0092 18       		.uleb128 0x18
 936 0093 9742     		.uleb128 0x2117
 937 0095 19       		.uleb128 0x19
 938 0096 00       		.byte	0
 939 0097 00       		.byte	0
 940 0098 0A       		.uleb128 0xa
 941 0099 2E       		.uleb128 0x2e
 942 009a 01       		.byte	0x1
 943 009b 3F       		.uleb128 0x3f
 944 009c 19       		.uleb128 0x19
 945 009d 03       		.uleb128 0x3
 946 009e 0E       		.uleb128 0xe
 947 009f 3A       		.uleb128 0x3a
 948 00a0 0B       		.uleb128 0xb
 949 00a1 3B       		.uleb128 0x3b
 950 00a2 0B       		.uleb128 0xb
 951 00a3 27       		.uleb128 0x27
 952 00a4 19       		.uleb128 0x19
 953 00a5 11       		.uleb128 0x11
 954 00a6 01       		.uleb128 0x1
 955 00a7 12       		.uleb128 0x12
 956 00a8 06       		.uleb128 0x6
 957 00a9 40       		.uleb128 0x40
 958 00aa 18       		.uleb128 0x18
 959 00ab 9742     		.uleb128 0x2117
 960 00ad 19       		.uleb128 0x19
 961 00ae 01       		.uleb128 0x1
 962 00af 13       		.uleb128 0x13
 963 00b0 00       		.byte	0
 964 00b1 00       		.byte	0
 965 00b2 0B       		.uleb128 0xb
 966 00b3 34       		.uleb128 0x34
 967 00b4 00       		.byte	0
 968 00b5 03       		.uleb128 0x3
 969 00b6 0E       		.uleb128 0xe
 970 00b7 3A       		.uleb128 0x3a
 971 00b8 0B       		.uleb128 0xb
 972 00b9 3B       		.uleb128 0x3b
 973 00ba 0B       		.uleb128 0xb
 974 00bb 49       		.uleb128 0x49
 975 00bc 13       		.uleb128 0x13
 976 00bd 02       		.uleb128 0x2
 977 00be 17       		.uleb128 0x17
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 34


 978 00bf 00       		.byte	0
 979 00c0 00       		.byte	0
 980 00c1 0C       		.uleb128 0xc
 981 00c2 898201   		.uleb128 0x4109
 982 00c5 01       		.byte	0x1
 983 00c6 11       		.uleb128 0x11
 984 00c7 01       		.uleb128 0x1
 985 00c8 31       		.uleb128 0x31
 986 00c9 13       		.uleb128 0x13
 987 00ca 01       		.uleb128 0x1
 988 00cb 13       		.uleb128 0x13
 989 00cc 00       		.byte	0
 990 00cd 00       		.byte	0
 991 00ce 0D       		.uleb128 0xd
 992 00cf 8A8201   		.uleb128 0x410a
 993 00d2 00       		.byte	0
 994 00d3 02       		.uleb128 0x2
 995 00d4 18       		.uleb128 0x18
 996 00d5 9142     		.uleb128 0x2111
 997 00d7 18       		.uleb128 0x18
 998 00d8 00       		.byte	0
 999 00d9 00       		.byte	0
 1000 00da 0E       		.uleb128 0xe
 1001 00db 898201   		.uleb128 0x4109
 1002 00de 01       		.byte	0x1
 1003 00df 11       		.uleb128 0x11
 1004 00e0 01       		.uleb128 0x1
 1005 00e1 31       		.uleb128 0x31
 1006 00e2 13       		.uleb128 0x13
 1007 00e3 00       		.byte	0
 1008 00e4 00       		.byte	0
 1009 00e5 0F       		.uleb128 0xf
 1010 00e6 898201   		.uleb128 0x4109
 1011 00e9 00       		.byte	0
 1012 00ea 11       		.uleb128 0x11
 1013 00eb 01       		.uleb128 0x1
 1014 00ec 31       		.uleb128 0x31
 1015 00ed 13       		.uleb128 0x13
 1016 00ee 00       		.byte	0
 1017 00ef 00       		.byte	0
 1018 00f0 10       		.uleb128 0x10
 1019 00f1 2E       		.uleb128 0x2e
 1020 00f2 01       		.byte	0x1
 1021 00f3 3F       		.uleb128 0x3f
 1022 00f4 19       		.uleb128 0x19
 1023 00f5 03       		.uleb128 0x3
 1024 00f6 0E       		.uleb128 0xe
 1025 00f7 3A       		.uleb128 0x3a
 1026 00f8 0B       		.uleb128 0xb
 1027 00f9 3B       		.uleb128 0x3b
 1028 00fa 05       		.uleb128 0x5
 1029 00fb 27       		.uleb128 0x27
 1030 00fc 19       		.uleb128 0x19
 1031 00fd 49       		.uleb128 0x49
 1032 00fe 13       		.uleb128 0x13
 1033 00ff 11       		.uleb128 0x11
 1034 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 35


 1035 0101 12       		.uleb128 0x12
 1036 0102 06       		.uleb128 0x6
 1037 0103 40       		.uleb128 0x40
 1038 0104 18       		.uleb128 0x18
 1039 0105 9742     		.uleb128 0x2117
 1040 0107 19       		.uleb128 0x19
 1041 0108 01       		.uleb128 0x1
 1042 0109 13       		.uleb128 0x13
 1043 010a 00       		.byte	0
 1044 010b 00       		.byte	0
 1045 010c 11       		.uleb128 0x11
 1046 010d 34       		.uleb128 0x34
 1047 010e 00       		.byte	0
 1048 010f 03       		.uleb128 0x3
 1049 0110 0E       		.uleb128 0xe
 1050 0111 3A       		.uleb128 0x3a
 1051 0112 0B       		.uleb128 0xb
 1052 0113 3B       		.uleb128 0x3b
 1053 0114 05       		.uleb128 0x5
 1054 0115 49       		.uleb128 0x49
 1055 0116 13       		.uleb128 0x13
 1056 0117 02       		.uleb128 0x2
 1057 0118 18       		.uleb128 0x18
 1058 0119 00       		.byte	0
 1059 011a 00       		.byte	0
 1060 011b 12       		.uleb128 0x12
 1061 011c 34       		.uleb128 0x34
 1062 011d 00       		.byte	0
 1063 011e 03       		.uleb128 0x3
 1064 011f 0E       		.uleb128 0xe
 1065 0120 3A       		.uleb128 0x3a
 1066 0121 0B       		.uleb128 0xb
 1067 0122 3B       		.uleb128 0x3b
 1068 0123 0B       		.uleb128 0xb
 1069 0124 49       		.uleb128 0x49
 1070 0125 13       		.uleb128 0x13
 1071 0126 3F       		.uleb128 0x3f
 1072 0127 19       		.uleb128 0x19
 1073 0128 02       		.uleb128 0x2
 1074 0129 18       		.uleb128 0x18
 1075 012a 00       		.byte	0
 1076 012b 00       		.byte	0
 1077 012c 00       		.byte	0
 1078              		.section	.debug_loc,"",%progbits
 1079              	.Ldebug_loc0:
 1080              	.LLST0:
 1081 0000 0A000000 		.4byte	.LVL4
 1082 0004 0E000000 		.4byte	.LVL5
 1083 0008 0100     		.2byte	0x1
 1084 000a 53       		.byte	0x53
 1085 000b 00000000 		.4byte	0
 1086 000f 00000000 		.4byte	0
 1087              		.section	.debug_aranges,"",%progbits
 1088 0000 8C000000 		.4byte	0x8c
 1089 0004 0200     		.2byte	0x2
 1090 0006 00000000 		.4byte	.Ldebug_info0
 1091 000a 04       		.byte	0x4
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 36


 1092 000b 00       		.byte	0
 1093 000c 0000     		.2byte	0
 1094 000e 0000     		.2byte	0
 1095 0010 00000000 		.4byte	.LFB2
 1096 0014 10000000 		.4byte	.LFE2-.LFB2
 1097 0018 00000000 		.4byte	.LFB3
 1098 001c 10000000 		.4byte	.LFE3-.LFB3
 1099 0020 00000000 		.4byte	.LFB4
 1100 0024 0C000000 		.4byte	.LFE4-.LFB4
 1101 0028 00000000 		.4byte	.LFB5
 1102 002c 14000000 		.4byte	.LFE5-.LFB5
 1103 0030 00000000 		.4byte	.LFB6
 1104 0034 0C000000 		.4byte	.LFE6-.LFB6
 1105 0038 00000000 		.4byte	.LFB7
 1106 003c 0C000000 		.4byte	.LFE7-.LFB7
 1107 0040 00000000 		.4byte	.LFB8
 1108 0044 0C000000 		.4byte	.LFE8-.LFB8
 1109 0048 00000000 		.4byte	.LFB1
 1110 004c 38000000 		.4byte	.LFE1-.LFB1
 1111 0050 00000000 		.4byte	.LFB0
 1112 0054 1C000000 		.4byte	.LFE0-.LFB0
 1113 0058 00000000 		.4byte	.LFB9
 1114 005c 0C000000 		.4byte	.LFE9-.LFB9
 1115 0060 00000000 		.4byte	.LFB10
 1116 0064 0C000000 		.4byte	.LFE10-.LFB10
 1117 0068 00000000 		.4byte	.LFB11
 1118 006c 0C000000 		.4byte	.LFE11-.LFB11
 1119 0070 00000000 		.4byte	.LFB12
 1120 0074 0C000000 		.4byte	.LFE12-.LFB12
 1121 0078 00000000 		.4byte	.LFB13
 1122 007c 0C000000 		.4byte	.LFE13-.LFB13
 1123 0080 00000000 		.4byte	.LFB14
 1124 0084 0C000000 		.4byte	.LFE14-.LFB14
 1125 0088 00000000 		.4byte	0
 1126 008c 00000000 		.4byte	0
 1127              		.section	.debug_ranges,"",%progbits
 1128              	.Ldebug_ranges0:
 1129 0000 00000000 		.4byte	.LFB2
 1130 0004 10000000 		.4byte	.LFE2
 1131 0008 00000000 		.4byte	.LFB3
 1132 000c 10000000 		.4byte	.LFE3
 1133 0010 00000000 		.4byte	.LFB4
 1134 0014 0C000000 		.4byte	.LFE4
 1135 0018 00000000 		.4byte	.LFB5
 1136 001c 14000000 		.4byte	.LFE5
 1137 0020 00000000 		.4byte	.LFB6
 1138 0024 0C000000 		.4byte	.LFE6
 1139 0028 00000000 		.4byte	.LFB7
 1140 002c 0C000000 		.4byte	.LFE7
 1141 0030 00000000 		.4byte	.LFB8
 1142 0034 0C000000 		.4byte	.LFE8
 1143 0038 00000000 		.4byte	.LFB1
 1144 003c 38000000 		.4byte	.LFE1
 1145 0040 00000000 		.4byte	.LFB0
 1146 0044 1C000000 		.4byte	.LFE0
 1147 0048 00000000 		.4byte	.LFB9
 1148 004c 0C000000 		.4byte	.LFE9
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 37


 1149 0050 00000000 		.4byte	.LFB10
 1150 0054 0C000000 		.4byte	.LFE10
 1151 0058 00000000 		.4byte	.LFB11
 1152 005c 0C000000 		.4byte	.LFE11
 1153 0060 00000000 		.4byte	.LFB12
 1154 0064 0C000000 		.4byte	.LFE12
 1155 0068 00000000 		.4byte	.LFB13
 1156 006c 0C000000 		.4byte	.LFE13
 1157 0070 00000000 		.4byte	.LFB14
 1158 0074 0C000000 		.4byte	.LFE14
 1159 0078 00000000 		.4byte	0
 1160 007c 00000000 		.4byte	0
 1161              		.section	.debug_line,"",%progbits
 1162              	.Ldebug_line0:
 1163 0000 59010000 		.section	.debug_str,"MS",%progbits,1
 1163      02004100 
 1163      00000201 
 1163      FB0E0D00 
 1163      01010101 
 1164              	.LASF38:
 1165 0000 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\PSoC C"
 1165      6C65732E 
 1165      6175636B 
 1165      6C616E64 
 1165      2E61632E 
 1166 002e 72656174 		.ascii	"reator\\Digital_Pins01\\mother.cydsn\000"
 1166      6F725C44 
 1166      69676974 
 1166      616C5F50 
 1166      696E7330 
 1167              	.LASF35:
 1168 0051 50574D33 		.ascii	"PWM3_ReadPeriod\000"
 1168      5F526561 
 1168      64506572 
 1168      696F6400 
 1169              	.LASF21:
 1170 0061 70657269 		.ascii	"period\000"
 1170      6F6400
 1171              	.LASF3:
 1172 0068 73686F72 		.ascii	"short unsigned int\000"
 1172      7420756E 
 1172      7369676E 
 1172      65642069 
 1172      6E7400
 1173              	.LASF29:
 1174 007b 50574D33 		.ascii	"PWM3_WriteControlRegister\000"
 1174      5F577269 
 1174      7465436F 
 1174      6E74726F 
 1174      6C526567 
 1175              	.LASF16:
 1176 0095 50574D33 		.ascii	"PWM3_Enable\000"
 1176      5F456E61 
 1176      626C6500 
 1177              	.LASF39:
 1178 00a1 50574D33 		.ascii	"PWM3_ReadControlRegister\000"
 1178      5F526561 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 38


 1178      64436F6E 
 1178      74726F6C 
 1178      52656769 
 1179              	.LASF9:
 1180 00ba 666C6F61 		.ascii	"float\000"
 1180      7400
 1181              	.LASF20:
 1182 00c0 636F756E 		.ascii	"counter\000"
 1182      74657200 
 1183              	.LASF1:
 1184 00c8 756E7369 		.ascii	"unsigned char\000"
 1184      676E6564 
 1184      20636861 
 1184      7200
 1185              	.LASF36:
 1186 00d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1186      43313120 
 1186      352E342E 
 1186      31203230 
 1186      31363036 
 1187 0109 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1187      20726576 
 1187      6973696F 
 1187      6E203233 
 1187      37373135 
 1188 013c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1188      66756E63 
 1188      74696F6E 
 1188      2D736563 
 1188      74696F6E 
 1189              	.LASF13:
 1190 0164 72656738 		.ascii	"reg8\000"
 1190      00
 1191              	.LASF5:
 1192 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 1192      20756E73 
 1192      69676E65 
 1192      6420696E 
 1192      7400
 1193              	.LASF12:
 1194 017b 75696E74 		.ascii	"uint8\000"
 1194      3800
 1195              	.LASF30:
 1196 0181 636F6E74 		.ascii	"control\000"
 1196      726F6C00 
 1197              	.LASF32:
 1198 0189 50574D33 		.ascii	"PWM3_ReadCapture\000"
 1198      5F526561 
 1198      64436170 
 1198      74757265 
 1198      00
 1199              	.LASF25:
 1200 019a 50574D33 		.ascii	"PWM3_Init\000"
 1200      5F496E69 
 1200      7400
 1201              	.LASF10:
 1202 01a4 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 39


 1202      6C6500
 1203              	.LASF8:
 1204 01ab 756E7369 		.ascii	"unsigned int\000"
 1204      676E6564 
 1204      20696E74 
 1204      00
 1205              	.LASF26:
 1206 01b8 50574D33 		.ascii	"PWM3_Start\000"
 1206      5F537461 
 1206      727400
 1207              	.LASF7:
 1208 01c3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1208      206C6F6E 
 1208      6720756E 
 1208      7369676E 
 1208      65642069 
 1209              	.LASF28:
 1210 01da 72657375 		.ascii	"result\000"
 1210      6C7400
 1211              	.LASF40:
 1212 01e1 50574D33 		.ascii	"PWM3_initVar\000"
 1212      5F696E69 
 1212      74566172 
 1212      00
 1213              	.LASF33:
 1214 01ee 50574D33 		.ascii	"PWM3_ReadCompare1\000"
 1214      5F526561 
 1214      64436F6D 
 1214      70617265 
 1214      3100
 1215              	.LASF34:
 1216 0200 50574D33 		.ascii	"PWM3_ReadCompare2\000"
 1216      5F526561 
 1216      64436F6D 
 1216      70617265 
 1216      3200
 1217              	.LASF15:
 1218 0212 73697A65 		.ascii	"sizetype\000"
 1218      74797065 
 1218      00
 1219              	.LASF31:
 1220 021b 50574D33 		.ascii	"PWM3_ReadCounter\000"
 1220      5F526561 
 1220      64436F75 
 1220      6E746572 
 1220      00
 1221              	.LASF6:
 1222 022c 6C6F6E67 		.ascii	"long long int\000"
 1222      206C6F6E 
 1222      6720696E 
 1222      7400
 1223              	.LASF11:
 1224 023a 63686172 		.ascii	"char\000"
 1224      00
 1225              	.LASF17:
 1226 023f 50574D33 		.ascii	"PWM3_Stop\000"
 1226      5F53746F 
ARM GAS  C:\Users\tkam627\AppData\Local\Temp\ccTcM7WQ.s 			page 40


 1226      7000
 1227              	.LASF2:
 1228 0249 73686F72 		.ascii	"short int\000"
 1228      7420696E 
 1228      7400
 1229              	.LASF27:
 1230 0253 6374726C 		.ascii	"ctrl\000"
 1230      00
 1231              	.LASF18:
 1232 0258 50574D33 		.ascii	"PWM3_WriteCounter\000"
 1232      5F577269 
 1232      7465436F 
 1232      756E7465 
 1232      7200
 1233              	.LASF37:
 1234 026a 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM3.c\000"
 1234      72617465 
 1234      645F536F 
 1234      75726365 
 1234      5C50536F 
 1235              	.LASF4:
 1236 0288 6C6F6E67 		.ascii	"long int\000"
 1236      20696E74 
 1236      00
 1237              	.LASF19:
 1238 0291 50574D33 		.ascii	"PWM3_WritePeriod\000"
 1238      5F577269 
 1238      74655065 
 1238      72696F64 
 1238      00
 1239              	.LASF14:
 1240 02a2 6C6F6E67 		.ascii	"long double\000"
 1240      20646F75 
 1240      626C6500 
 1241              	.LASF0:
 1242 02ae 7369676E 		.ascii	"signed char\000"
 1242      65642063 
 1242      68617200 
 1243              	.LASF23:
 1244 02ba 636F6D70 		.ascii	"compare\000"
 1244      61726500 
 1245              	.LASF22:
 1246 02c2 50574D33 		.ascii	"PWM3_WriteCompare1\000"
 1246      5F577269 
 1246      7465436F 
 1246      6D706172 
 1246      653100
 1247              	.LASF24:
 1248 02d5 50574D33 		.ascii	"PWM3_WriteCompare2\000"
 1248      5F577269 
 1248      7465436F 
 1248      6D706172 
 1248      653200
 1249              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
